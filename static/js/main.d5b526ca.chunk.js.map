{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"mMAKe,SAASA,EAAOC,GAC3B,OACIC,IAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCJ,EAAMK,KAAI,QAAAD,OAAOJ,EAAMK,OACrEJ,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAKN,EAAMO,OAC5CN,IAAAC,cAAA,UAAQC,UAAU,iBAAiBK,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACxLZ,IAAAC,cAAA,QAAMC,UAAU,yBAEpBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BACzCb,IAAAC,cAAA,MAAIC,UAAU,mCACVF,IAAAC,cAAA,MAAIC,UAAU,YAEVF,IAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAI,UAOpEL,IAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbJ,EAAMK,KAAe,OAAO,UACvEJ,IAAAC,cAAA,SAAOC,UAAU,mBAAmBa,QAAShB,EAAMiB,WAAYT,KAAK,WAAWU,KAAK,SAASJ,GAAG,2BAC5Fb,IAAAC,cAAA,SAAOC,UAAU,mBAAmBgB,QAAQ,0BAAyB,uBCvBlF,SAASC,EAASpB,GAC7B,IAuCCqB,EAEuBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEpB,OACItB,IAAAC,cAAAD,IAAA0B,SAAA,KACI1B,IAAAC,cAAA,OAAKC,UAAU,YAAYyB,MAAO,CAAEC,MAAsB,SAAf7B,EAAMK,KAAkB,QAAU,UACzEJ,IAAAC,cAAA,UAAKF,EAAM8B,SACX7B,IAAAC,cAAA,OAAKC,UAAU,QACXF,IAAAC,cAAA,YAAUC,UAAU,eAAe4B,MAAON,EAAMO,SA3BzC,SAACC,GAEpBP,EAAQO,EAAMC,OAAOH,QAyBiEH,MAAO,CAAEO,gBAAgC,SAAfnC,EAAMK,KAAkB,UAAY,QAAUwB,MAAoB,SAAb7B,EAAMK,KAAc,QAAQ,SAAUS,GAAG,WAAWsB,KAAK,OAEtNnC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QAlD/B,WAElB,IAAIqB,EAAUZ,EAAKa,cACnBZ,EAAQW,GACRrC,EAAMuC,UAAU,0BAA2B,aA8C8B,wBACjEtC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QA5C/B,WAElB,IAAIqB,EAAUZ,EAAKe,cACnBd,EAAQW,GACRrC,EAAMuC,UAAU,0BAA2B,aAwC8B,wBACjEtC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QAtC5B,WAGrBU,EADc,IAEd1B,EAAMuC,UAAU,gBAAiB,aAkC2C,cACpEtC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QA1BlC,WACf,IAAIS,EAAOgB,SAASC,eAAe,YACnCjB,EAAKkB,SACLC,UAAUC,UAAUC,UAAUrB,EAAKM,OACnC/B,EAAMuC,UAAU,uBAAwB,aAsB8B,aAC9DtC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QAnB3B,WACtB,IAAIqB,EAAUZ,EAAKsB,MAAM,QACzBrB,EAAQW,EAAQW,KAAK,MACrBhD,EAAMuC,UAAU,wBAAyB,aAgBoC,wBAEzEtC,IAAAC,cAAA,OAAKC,UAAU,iBAAiByB,MAAO,CAACC,MAAoB,SAAb7B,EAAMK,KAAc,QAAQ,UACvEJ,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,SAAIuB,EAAKsB,MAAM,KAAKE,OAAO,cAAYxB,EAAKwB,OAAO,eACnDhD,IAAAC,cAAA,SAAI,KAAQuB,EAAKsB,MAAM,KAAKE,OAAO,gBACnChD,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAIuB,EAAKwB,OAAO,EAAExB,EAAK,4DDzBvC1B,EAAOmD,aAAe,CAClB3C,MAAO,iBACP4C,UAAW,SE5BAC,MAZf,SAAepD,GAKX,OACIA,EAAMqD,OAASpD,IAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBJ,EAAMqD,MAAM7C,KAAI,gCAAgCU,KAAK,SAC/FjB,IAAAC,cAAA,cANW,SAACoD,GAChB,IAAMC,EAAQD,EAAKd,cACnB,OAAOe,EAAMC,OAAO,GAAGlB,cAAgBiB,EAAME,MAAM,GAItCC,CAAW1D,EAAMqD,MAAM7C,OAAe,MAAIR,EAAMqD,MAAMM,MCuF5DC,MA/Ef,WAAe,IAAAvC,EACWC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAAlChB,EAAIkB,EAAA,GAAEsC,EAAOtC,EAAA,GAAwBuC,EAClBxC,mBAAS,MAAKyC,EAAAvC,YAAAsC,EAAA,GAAjCT,EAAKU,EAAA,GAAEC,EAAQD,EAAA,GAEhBxB,EAAY,SAAC0B,EAASzD,GAC1BwD,EAAS,CACPL,IAAKM,EACLzD,KAAMA,IAER0D,WAAW,WACTF,EAAS,OACR,OA6BL,OAmBE/D,IAAAC,cAAAD,IAAA0B,SAAA,KAEI1B,IAAAC,cAACH,EAAM,CAACQ,MAAM,YAAY4C,UAAU,QAAQ9C,KAAMA,EAAMY,WA9C3C,WACJ,UAATZ,GACFwD,EAAQ,QACRpB,SAAS0B,KAAKvC,MAAMO,gBAAkB,UACtCI,EAAU,6BAA8B,WACxCE,SAASlC,MAAQ,0BAYjBsD,EAAQ,SACRpB,SAAS0B,KAAKvC,MAAMO,gBAAkB,QACtCI,EAAU,8BAA+B,WACzCE,SAASlC,MAAQ,6BA2BfN,IAAAC,cAACkD,EAAK,CAACC,MAAOA,IACdpD,IAAAC,cAAA,OAAKC,UAAU,iBAAiBE,KAAMA,GAMhCJ,IAAAC,cAACkB,EAAQ,CAACmB,UAAWA,EAAWT,QAAQ,kCAAkCzB,KAAMA,OC1E/E+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWzC,SAASC,eAAe,SACpDyC,OACHlF,IAAAC,cAACD,IAAMmF,WAAU,KACfnF,IAAAC,cAAC0D,EAAG,QAORQ","file":"static/js/main.d5b526ca.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    \r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav\r\n            className={`navbar navbar-expand-lg navbar-${props.mode}  bg-${props.mode}`}\r\n        >\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    {props.title}\r\n                </Link>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" to=\"/about\">\r\n                                {props.aboutText}\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    //{ Enable Dark Mode }\r\n                    <div\r\n                        className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"\r\n                            } mx-2`}\r\n                    >\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            onClick={props.toggleMode}\r\n                            type=\"checkbox\"\r\n                            role=\"switch\"\r\n                            id=\"flexSwitchCheckDefault\"\r\n                        />\r\n                        <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"flexSwitchCheckDefault\"\r\n                        >\r\n                            DarkMode\r\n                        </label>\r\n                    </div>\r\n\r\n                    //{/Search Button }\r\n                    <form className=\"d-flex\" role=\"search\">\r\n                        <input\r\n                            className=\"form-control me-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\"\r\n                        />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };\r\n\r\n*/","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleclearClick = () => {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"textbox1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard!\", \"success\");\r\n    }\r\n\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // setText=(\"new text\");     //correct way to change the state\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#092b39' : 'white' , color: props.mode==='dark'?'white':'black'}} id=\"textbox1\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to lowercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleclearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minute read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter somthing in the textbox above to preview it here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\n// let name = \"Bhuvan\"\nfunction App() {\n  const [mode, setMode] = useState('light');  //Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#092b39';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n\n      //For blinking the title use following code\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode'\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now'\n      // }, 1500);\n\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  };\n\n\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React With Documentation\n    //     </a>\n    //   </header>\n    // </div>\n\n\n    <>\n      {/* <BrowserRouter> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\" mode={mode}>\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About />}/>\n            </Routes> */}\n          {/* <Routes>\n            <Route exact path=\"/\" element={ */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n            {/* } />\n          </Routes> */}\n        </div >\n      {/* </BrowserRouter> */}\n      {/* { <About/> } */}\n    </>\n  );\n}\n\nexport default App;\n\n\n\n/*\nimport \"./App.css\";\n\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(`light`); // Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  // Toggle  Dark Mode\n  const toggleMode = () => {\n    if (mode === `light`) {\n      setMode(`dark`);\n      document.body.style.backgroundColor = \"#020334\";\n      showAlert(`Dark mode has been enabled`, \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(`light`);\n      document.body.style.backgroundColor = \"white\";\n      showAlert(`Light mode has been enabled`, \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n\n        <Alert alert={alert} />\n        <div className=\"container my-3\" mode={mode}>\n          <Routes>\n            <Route path=\"/about\" element={<About />} />\n          </Routes>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                />\n              }\n            />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}